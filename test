1. string number boolean bigint symbol object undefined null
2.a
3. pop map forEach shift unshift filter find sort reduce concat splice slice flat freeze reverse some indexOf includes
4. a JAVA SCRIPT OBJECT NOTATION
5. function counter () {
       let x = 1;
       function add() {
           x+=2;
           console.log(x);
       }
       return add;
   }
   let something = counter();
   something();
   something();
   something();
   something();
6.
let arr = [1, 45, 250];
arr.forEach(function(index, i, arr) {
  console.log( i + ": " + index);
});
для кожного елемента викликаєму колбек  і передаємо 3 параметра
index- почерговий елемнет  i- його номер arr- масив що перебираємо
7. Arguments це псевдомасив який містить у собі аргументи
і оскільки це Псевдо масив йому недоступні такі методи як forEach map pop
8. це одна з баг variable (var) можливість пересуватися(вспливати) змінним угору перед тим як код буде виконаний
а це означає що байдуже де буде оголошена зміна вона всерівно пересувається вгору області своєї видимості
також hoisting ( а також і immersion -занурення) властивий і для  eventів.
9. не мають свого this
10. метод для обробки асинхроного коду (resolve(fulfilled) reject pending)
11. function(a,b,c); f(a)(b)(c)
12. this посилається на цей обєкт в контексті якого знаходиться
посилається на екземпляр класу  в конструкторі якого знаходиться
class User {
constructor(name,age,work){
this.name = name;
this.age = age;
this.work = work}
}
13. робить однорівневу копію обєкта
Цей метод можна використовувати для об'єднання і клонування об'єктів.
Джерела null або undefined обробляються як порожні об'єкти і нічого не додають до цільового об'єкту.
основним  буде той який буде першим по порядку аргументом (тобто перший зливається в другий)
14. 1 + якщо властивість не визначена то JS дивиться на його прототип і намагається визначити чи є ця властивість у нього
1- при перезаписі прототипа ми повністю перетираємо всі методи
15.
ООП
Обєкто орієнтоване програмування
 js є саме такою мовою а також прототипною та динамічно типізованою мовою
 (такою є також Swift) тобто це означає що тип обєкта визначається автоматично машиною.
 існує 4 принципи ооп:  інкапсуляція , поліморфізм, наслідування та абстракція
 інкапсуляція - захист даних
 поліморфізм - використання однакових імен для технічно різних завдань
 наслідування - це слово говорить саме за себе
  тобто один обєкт прибирає собі властивості іншго в js аналогія з наслідуванням класів extends
  class Cat {
  constructor(name, countOfPaw){
    this.name = name;
    this.countOfPaw = countOfPaw;
  }
  }
  class Dog extends Cat {
  constructor(countOfPaw , name, age){
    this.name = name;
    super(countOfPaw);
    this.age = age
  }
  }
  абстракція- управління функціями високого рівня через функції низького